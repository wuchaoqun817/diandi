<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lw.mapper.VideoMapper">
  <resultMap id="BaseResultMap" type="com.lw.model.Video">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="storage_path" jdbcType="VARCHAR" property="storagePath" />
    <result column="video_size" jdbcType="BIGINT" property="videoSize" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="create_user_name" jdbcType="VARCHAR" property="createUserName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="is_selected" jdbcType="BIT" property="selected" />
    <result column="cover" jdbcType="VARCHAR" property="cover" />
    <result column="like_num" jdbcType="VARCHAR" property="likeNum" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, storage_path, video_size, create_user_id, create_user_name, create_time, 
    status, type, is_selected, cover, like_num
  </sql>
  <sql id="Alias_Base_Column_List">
    v.id, 
    v.name, 
    v.storage_path, 
    v.video_size, 
    v.create_user_id, 
    v.create_user_name, 
    v.create_time, 
    v.status, 
    v.type, 
    v.is_selected,
    v.cover,
    v.like_num
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from video
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from video
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lw.model.Video">
    insert into video (id, name, storage_path, 
      video_size, create_user_id, create_user_name, 
      create_time, status, type, 
      is_selected, cover)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{storagePath,jdbcType=VARCHAR}, 
      #{videoSize,jdbcType=BIGINT}, #{createUserId,jdbcType=INTEGER}, #{createUserName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, #{type,jdbcType=VARCHAR}, 
      #{selected,jdbcType=BIT}, #{cover})
  </insert>
  <insert id="insertSelective" parameterType="com.lw.model.Video">
    insert into video
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="storagePath != null">
        storage_path,
      </if>
      <if test="videoSize != null">
        video_size,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createUserName != null">
        create_user_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="type != null">
        type,
      </if>
      is_selected,
      <if test="cover != null">
        cover,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="storagePath != null">
        #{storagePath,jdbcType=VARCHAR},
      </if>
      <if test="videoSize != null">
        #{videoSize,jdbcType=BIGINT},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createUserName != null">
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      #{selected,jdbcType=BIT},
      <if test="cover != null">
      	#{cover}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lw.model.Video">
    update video
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="storagePath != null">
        storage_path = #{storagePath,jdbcType=VARCHAR},
      </if>
      <if test="videoSize != null">
        video_size = #{videoSize,jdbcType=BIGINT},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createUserName != null">
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="selected != null">
        is_selected = #{selected,jdbcType=BIT},
      </if>
      <if test="cover != null">
        cover = #{cover,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lw.model.Video">
    update video
    set name = #{name,jdbcType=VARCHAR},
      storage_path = #{storagePath,jdbcType=VARCHAR},
      video_size = #{videoSize,jdbcType=BIGINT},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      type = #{type,jdbcType=VARCHAR},
      is_selected = #{selected,jdbcType=BIT},
      cover = #{cover}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectVideos" resultMap = "BaseResultMap">
  	select <include refid="Alias_Base_Column_List" />
  	from video v
  	left join block_video bv on bv.video_id = v.id
  	left join block b on b.id = bv.block_id
  	<where>
  		<if test="blockId != null">
  			bv.block_id = #{blockId}
  		</if>
  		<if test="createUserId != null">
  			and create_user_id = #{createUserId}
  		</if>
  		<if test="videoName != null">
  			and name like concat('%',#{videoName},'%')
  		</if>
  	</where>
  </select>
  
  <update id="updateLikeNum">
  	update video set like_num = (select count(*) from video_like where video_id = #{videoId})
  	where id = #{videoId}
  </update>
</mapper>